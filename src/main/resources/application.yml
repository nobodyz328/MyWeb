# ========================
# 服务器配置
# ========================
server:
  port: 8443
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: 123456
    key-store-type: PKCS12
    key-alias: myweb
  servlet:
    context-path: /blog
#    address: 0.0.0.0




spring:
  config:
    import:
      - classpath:application-security-events.yml
      - classpath:application-security.yml

    # ========================
    # 数据源配置
    # ========================
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10

# ========================
# 文件上传配置
# ========================
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 20MB
      enabled: true


  mail:
    host: smtp.qq.com           # 邮箱SMTP服务器
    port: 465                   # 通常SSL用465，非SSL用25
    username: 3281314509@qq.com
    password: qztzywsepofodabj      # 授权码
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true

  # ========================
  # JPA 配置
  # ========================
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: false

  # ========================
  # Flyway 配置
  # ========================
  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false
    clean-disabled: false
  
  # ========================
  # RabbitMQ 配置
  # ========================
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    listener:
      simple:
        concurrency: 5
        max-concurrency: 10
        prefetch: 1
        default-requeue-rejected: false

  # ========================
  # Redis 配置
  # ========================
  data:
    redis:
      connect-timeout: 2000ms
      client-type: lettuce
      client-name: my-redis-client
      database: 0
      password:
      timeout: 2000ms
#    lettuce:
#      pool:
#        max-active: 8
#        max-wait: -1ms
#        max-idle: 8
#        min-idle: 0
  # ========================
  # MyBatis 配置
  # ========================
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.myweb.website_core.demos.web
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

  # ========================
  # SQL 初始化配置
  # ========================
#  sql:
#    init:
#      mode: always
#      data-locations: classpath:data.sql
#      encoding: UTF-8

# ========================
# 日志配置
# ========================
logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.myweb: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'


# ========================
# 自定义配置
# ========================
app:
  upload:
    upload-dir: uploads/images/
    max-file-size: 5242880  # 5MB in bytes
    max-request-size: 20971520  # 20MB in bytes
    allowed-types:
      - image/jpeg
      - image/png
      - image/gif
      - image/webp
  
  # ========================
  # 审计日志配置
  # ========================
  audit:
    # 日志保留天数
    retention-days: 90
    # 批量处理大小
    batch-size: 1000
    # 导出记录数限制
    export-limit: 10000
    
    # 存储管理配置
    storage:
      # 日志存储路径
      path: /var/log/myweb
      # 存储空间告警阈值（百分比）
      warning-threshold: 50
      # 存储空间严重告警阈值（百分比）
      critical-threshold: 70
      # 日志文件保留天数
      retention-days: 90
      # 压缩阈值（MB）
      compression-threshold: 100
      # 是否启用自动压缩
      auto-compression: true
      # 是否启用完整性校验
      integrity-check: true
    
    # 备份管理配置
    backup:
      # 备份存储路径
      path: /var/backup/myweb/logs
      # 备份文件保留天数
      retention-days: 365


