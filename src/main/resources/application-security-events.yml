# 安全事件监控配置
# 用于配置安全事件的监控、告警和统计功能
# 符合GB/T 22239-2019二级等保要求

app:
  security:
    event:
      # 是否启用安全事件监控
      enabled: true
      
      # 告警配置
      alert:
        # 邮件告警配置
        email-enabled: true
        email-recipients:
          - admin@myweb.com
          - security@myweb.com
          - ops@myweb.com
        email-from: security-alert@myweb.com
        
        # 短信告警配置
        sms-enabled: false
        sms-recipients:
          - "13800138000"
          - "13900139000"
        
        # 告警阈值配置
        threshold:
          # 高危事件立即告警
          immediate-alert-for-high-risk: true
          # 批量告警的最小事件数量
          batch-alert-min-count: 5
          # 告警频率限制（分钟）
          alert-rate-limit-minutes: 15
      
      # 统计配置
      statistics:
        # 是否启用统计功能
        enabled: true
        # 统计缓存过期时间（小时）
        cache-expiration-hours: 24
        # 实时统计更新间隔（秒）
        realtime-update-interval-seconds: 60
        # 历史统计保留天数
        history-retention-days: 90
      
      # 清理配置
      cleanup:
        # 是否启用自动清理
        enabled: true
        # 事件保留天数
        retention-days: 90
        # 清理任务执行时间（cron表达式）
        schedule: "0 0 2 * * ?"
        # 批量删除大小
        batch-size: 1000
      
      # 异常检测配置
      anomaly-detection:
        # 是否启用异常检测
        enabled: true
        # 检测时间窗口（小时）
        time-window-hours: 1
        # 异常事件阈值
        event-threshold: 10
        # 用户异常检测阈值
        user-anomaly-threshold: 5
        # IP异常检测阈值
        ip-anomaly-threshold: 20
        # 检测间隔（分钟）
        detection-interval-minutes: 5

# Spring Boot 异步配置
  task:
    execution:
      pool:
        # 核心线程数
        core-size: 5
        # 最大线程数
        max-size: 20
        # 队列容量
        queue-capacity: 100
        # 线程名前缀
        thread-name-prefix: "security-event-"
      shutdown:
        # 优雅关闭等待时间
        await-termination: true
        await-termination-period: 60s

# 日志配置
logging:
  level:
    com.myweb.website_core.application.service.security.audit.SecurityEventService: INFO
    com.myweb.website_core.application.service.security.audit.SecurityAlertService: INFO
    # 开发环境可以设置为DEBUG查看详细日志
    # com.myweb.website_core.application.service.security.audit.SecurityEventService: DEBUG
  
  pattern:
    # 安全事件相关日志使用特殊格式便于分析
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-}] %logger{36} - %msg%n"

# 邮件配置（如果使用邮件告警）
  mail:
    host: smtp.myweb.com
    port: 587
    username: security-alert@myweb.com
    password: ${MAIL_PASSWORD:your-mail-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

# Redis配置（用于缓存和统计）
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms

# 数据库配置
spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # 批量操作配置
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true

# 监控配置（可选，用于监控安全事件服务的性能）
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        #enabled: true
    tags:
      application: myweb-security-events

# 安全配置
security:
  # JWT配置
  jwt:
    secret: ${JWT_SECRET:MyWebBlogSecurityJwtSecretKey2024ForGB22239Compliance}
    expiration: 86400000 # 24小时
    
  # 会话配置
  session:
    timeout: 1800 # 30分钟
    max-concurrent: 1
    
  # 访问频率限制
  rate-limit:
    enabled: true
    default-per-minute: 60
    login-per-minute: 5
    register-per-minute: 3