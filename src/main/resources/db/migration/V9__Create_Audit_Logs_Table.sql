-- =====================================================
-- 审计日志表创建脚本
-- 符合GB/T 22239-2019二级等保要求的安全审计机制
-- 
-- 功能说明：
-- 1. 记录系统中所有重要操作的审计信息
-- 2. 支持用户操作、管理员操作、系统操作的全面审计
-- 3. 提供完善的索引策略，优化查询性能
-- 4. 支持安全分析和异常检测
-- 
-- 创建时间：2025-01-01
-- 版本：V9
-- =====================================================

-- 创建审计日志表
CREATE TABLE IF NOT EXISTS audit_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    username VARCHAR(50),
    operation VARCHAR(50) NOT NULL,
    resource_type VARCHAR(30),
    resource_id BIGINT,
    ip_address VARCHAR(45),
    user_agent VARCHAR(500),
    result VARCHAR(20) NOT NULL DEFAULT 'SUCCESS',
    error_message TEXT,
    request_data TEXT,
    response_data TEXT,
    execution_time BIGINT,
    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    session_id VARCHAR(100),
    request_id VARCHAR(50),
    description VARCHAR(500),
    risk_level INTEGER,
    location VARCHAR(100),
    device_fingerprint VARCHAR(100),
    tags VARCHAR(200),
    processed BOOLEAN NOT NULL DEFAULT FALSE,
    processed_at TIMESTAMP,
    processed_by VARCHAR(50),
    process_notes VARCHAR(500)
);

-- =====================================================
-- 创建索引策略
-- 根据常见查询模式和性能要求设计的索引策略
-- =====================================================

-- 1. 用户ID索引 - 用于按用户查询审计日志
CREATE INDEX IF NOT EXISTS idx_audit_user_id ON audit_logs(user_id);

-- 2. 操作类型索引 - 用于按操作类型查询
CREATE INDEX IF NOT EXISTS idx_audit_operation ON audit_logs(operation);

-- 3. 时间戳索引 - 用于按时间范围查询（最常用的查询条件）
CREATE INDEX IF NOT EXISTS idx_audit_timestamp ON audit_logs(timestamp);

-- 4. 资源类型和ID复合索引 - 用于查询特定资源的操作记录
CREATE INDEX IF NOT EXISTS idx_audit_resource ON audit_logs(resource_type, resource_id);

-- 5. IP地址索引 - 用于安全分析和异常检测
CREATE INDEX IF NOT EXISTS idx_audit_ip_address ON audit_logs(ip_address);

-- 6. 操作结果索引 - 用于查询失败的操作
CREATE INDEX IF NOT EXISTS idx_audit_result ON audit_logs(result);

-- 7. 用户名索引 - 用于按用户名查询（支持已删除用户的审计）
CREATE INDEX IF NOT EXISTS idx_audit_username ON audit_logs(username);

-- 8. 会话ID索引 - 用于追踪会话相关的所有操作
CREATE INDEX IF NOT EXISTS idx_audit_session_id ON audit_logs(session_id);

-- 9. 复合索引：用户+时间 - 用于用户操作历史查询
CREATE INDEX IF NOT EXISTS idx_audit_user_time ON audit_logs(user_id, timestamp);

-- 10. 复合索引：操作+时间 - 用于操作统计分析
CREATE INDEX IF NOT EXISTS idx_audit_operation_time ON audit_logs(operation, timestamp);

-- 11. 复合索引：结果+时间 - 用于失败操作分析
CREATE INDEX IF NOT EXISTS idx_audit_result_time ON audit_logs(result, timestamp);

-- 12. 复合索引：风险级别+时间 - 用于高风险操作查询
CREATE INDEX IF NOT EXISTS idx_audit_risk_time ON audit_logs(risk_level, timestamp);

-- 13. 复合索引：处理状态+风险级别 - 用于未处理安全事件查询
CREATE INDEX IF NOT EXISTS idx_audit_processed_risk ON audit_logs(processed, risk_level);

-- 14. 复合索引：IP+时间 - 用于IP行为分析
CREATE INDEX IF NOT EXISTS idx_audit_ip_time ON audit_logs(ip_address, timestamp);

-- 15. 复合索引：用户+操作+时间 - 用于特定用户特定操作查询
CREATE INDEX IF NOT EXISTS idx_audit_user_operation_time ON audit_logs(user_id, operation, timestamp);

-- =====================================================
-- 创建外键约束（可选）
-- 注意：由于审计日志需要保持历史记录的完整性，
-- 即使相关的用户被删除，审计日志也应该保留，
-- 因此这里不创建强制的外键约束
-- =====================================================

-- 如果需要外键约束，可以取消以下注释：
-- ALTER TABLE audit_logs ADD CONSTRAINT fk_audit_user 
--     FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL;

-- =====================================================
-- 创建触发器（可选）
-- 用于自动维护审计日志的完整性和一致性
-- =====================================================

-- 注意：触发器在Flyway迁移中可能有兼容性问题，建议在应用层处理风险级别设置

-- =====================================================
-- 插入初始数据（可选）
-- 记录系统启动的审计日志
-- =====================================================

INSERT INTO audit_logs (
    operation,
    resource_type,
    result,
    description,
    risk_level,
    timestamp
) VALUES (
    'SYSTEM_START',
    'SYSTEM',
    'SUCCESS',
    '系统启动，审计日志表初始化完成',
    1,
    CURRENT_TIMESTAMP
);

-- =====================================================
-- 创建视图（可选）
-- 提供常用查询的便捷视图
-- =====================================================

-- 创建安全事件视图
CREATE OR REPLACE VIEW v_security_events AS
SELECT 
    id,
    user_id,
    username,
    operation,
    resource_type,
    resource_id,
    ip_address,
    result,
    error_message,
    risk_level,
    location,
    timestamp,
    processed,
    processed_by
FROM audit_logs
WHERE 
    result IN ('FAILURE', 'ERROR') 
    OR risk_level >= 4;

-- 创建用户活动统计视图
CREATE OR REPLACE VIEW v_user_activity_stats AS
SELECT 
    user_id,
    username,
    COUNT(*) as total_operations,
    MAX(timestamp) as last_activity
FROM audit_logs
WHERE user_id IS NOT NULL
GROUP BY user_id, username;

-- 创建操作统计视图
CREATE OR REPLACE VIEW v_operation_stats AS
SELECT 
    operation,
    COUNT(*) as total_count,
    MAX(timestamp) as last_occurrence
FROM audit_logs
GROUP BY operation;

-- =====================================================
-- 注意：存储过程在Flyway迁移中可能有兼容性问题，建议单独创建或在应用层实现

-- 注意：定时任务和权限设置建议在数据库管理层面单独配置

-- =====================================================
-- 脚本执行完成标记
-- =====================================================

-- 记录脚本执行完成的审计日志
INSERT INTO audit_logs (
    operation,
    resource_type,
    result,
    description,
    risk_level,
    timestamp
) VALUES (
    'SYSTEM_CONFIG_UPDATE',
    'SYSTEM',
    'SUCCESS',
    '审计日志表创建脚本执行完成，数据库迁移V9完成',
    2,
    CURRENT_TIMESTAMP
);

-- 迁移脚本执行完成